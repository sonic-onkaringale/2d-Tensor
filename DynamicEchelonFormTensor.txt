#include <stdio.h>
#include <stdlib.h>

float echelon(float **a,int Size)
{

     float **b;

     int i, j, r, k, c, d;
     float temp;
     int m=(int)Size;
     int n=(int)Size;


      b = (float **) malloc(sizeof(float*)*(float)Size);

      for (j = 0; j < Size; j++)
      {
         b[j] = (float *) malloc(sizeof(float)*(float)Size);
      }


      for (i = 0; i < m; i++)
      {
	for (j = 0; j < n; j++)
	{
	  b[i][j] = a[i][j];
	}
      }


      for(c = 0; c < (m - 1); c++)
       	{
	     if (b[c][c] == 0)
	     {
		for (d = 0; d < (m - c - 1); d++)
		{
			if (b[c + d + 1][c] != 0)
			{
				for (j = 0; j < n; j++)
			        {
					temp = b[c + d + 1][j];
					b[c + d + 1][j] = b[c][j];
					b[c][j] = temp;
				}
			}
			else
				continue;
			break;
		}
	     }

	     for(r = 0; r < m; r++)
	     {
		for (k = 0; k < n; k++)
		{
			a[r][k] = b[r][k];
		}
	     }

	     for(d = 0; d < (m - c - 1); d++)
	     {
		  if (a[c + d + 1][c] != 0)
		  {
			for (j = 0; j < n; j++)
			{
				a[c + d + 1][j] = (b[c + d + 1][j]) - ((b[c + d + 1][c] / b[c][c]) * b[c][j]);
			}
		  }

		for (r = 0; r < m; r++)
		{
			for (k = 0; k < n; k++)
			{
				b[r][k] = a[r][k];
			}
		}
	    }
        }

        return **b;
}

int main()
{
   float ***matrix;              
   float **SUB;

   int size;
   size=0;
   int t=0;                  
   int i,j,k,l;
   int next=0;
   float y,z;
   int x;

  
   printf("\n Enter the size of sub-matrices (No. of rows = No. of columns) :  ");
   scanf("%d",&size);

   t=size*size;

   matrix = (float ***) malloc(sizeof(float **)*(float)t);

   for (i = 0; i < t; i++)
    {
        matrix[i] = (float **) malloc(sizeof(float*)*(float)size);

        for (j = 0; j < size; j++)
         {
            matrix[i][j] = (float *) malloc(sizeof(float)*(float)size);
         }
    }


     SUB = (float **) malloc(sizeof(float*)*(float)size);

     for (j = 0; j < size; j++)
     {
          SUB[j] = (float *) malloc(sizeof(float)*(float)size);
     }


     for(i=0;i<t;i++)
     {
       printf("\n Enter elements for matrix '%d' row wise." ,(i+1) );

       for(j=0;j<size;j++)                                                                            
       {
           for(k=0;k<size;k++)                                                                        
           {
               printf("\n Enter the element of address [%d][%d]  :", j, k );
               scanf("%f",&matrix[i][j][k]);
           }
       }
   }


   printf("\n\n\n                *************   Input  ****************\n\n\n");


   for(i=0;i<size;i++)
   {
       for(j=0;j<size;j++)
       {
           for(k=0;k<size;k++)
           {
               for(l=0;l<size;l++)
               {

                   x =  (int)matrix[next+k][j][l];

	           y =  matrix[next+k][j][l] ;

                   z =  matrix[next+k][j][l];
			       
                   y = y - x;
                
                   if (y == 0)
		              printf("       %d", x);
                   else
			      printf("       %f",z);
               }
               printf("    ");
           }
           printf("\n\n");
       }
       printf("\n\n\n");

       next+=size;
   }

  next=0;

  for(i=0;i<t;i++)
  {

      for(j=0;j<size;j++)
      {
         for(k=0;k<size;k++)
         {
             SUB[j][k]=matrix[i][j][k];
         }
      }
     
    
      echelon(SUB,size);



     for (j=0;j<size;j++)
     {
         for(k=0;k<size;k++)
         {
             matrix[i][j][k] = SUB[j][k];

         }
     }

  }
  printf("\n");

  printf("               **********Final Echelon*************");

  printf("\n\n\n");

   for(i=0;i<size;i++)
   {
       for(j=0;j<size;j++)
       {
           for(k=0;k<size;k++)
           {
               for(l=0;l<size;l++)
               {
                   x =  (int)matrix[next+k][j][l];

	           y =  matrix[next+k][j][l];

                   z =  matrix[next+k][j][l];

	           y =  y - x;

                   if (y == 0)
		              printf("       %4d", x);
                   else
			      printf("       %.2f",z);
               }
               printf("      ");
           }
           printf("\n\n");
       }
       printf("\n\n");

       next+=size;
   }

   return 0;
}
