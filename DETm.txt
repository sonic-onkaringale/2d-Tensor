#include <stdio.h>

int main()
{
   int matrix[9][3][3];                //  size = 3 &  size*size = 9
   int size;
   size=3;
   int t=size*size;                    //  t = total number of sub matrices   here, it's 9
   int i,j,k,l;
   int next=0;

   for(i=0;i<t;i++)
   {
       printf("\n Enter elements for matrix '%d' row wise." ,(i+1) );

       for(j=0;j<size;j++)                                                                             // size = 3    j<3
       {
           for(k=0;k<size;k++)                                                                         // size = 3    k<3
           {
               printf("\n Enter the element of address [%d][%d]  :", j, k );
               scanf("%d",&matrix[i][j][k]);
           }
       }
   }
   for(i=0;i<size;i++)
   {
       for(j=0;j<size;j++)
       {
           for(k=0;k<size;k++)
           {
               for(l=0;l<size;l++)
               {
                   printf("  %d",matrix[next+k][j][l]);
               }
               printf("    ");
           }
           printf("\n \n");
       }
       printf("\n \n");
       next+=size;
   }
 j=0;
   k=0;
   for(i=0;i<t;i++)                                                                                     // t = 9
   {
       if(i!=0)
       {
           if((i%size)==0)
                 k=0;
       }
       matrix[i][j][k] = matrix[i][0][0] * ((matrix[i][1][1] * matrix[i][2][2]) - (matrix[i][2][1] * matrix[i][1][2]))- matrix[i][0][1] * ((matrix[i][1][0] * matrix[i][2][2]) - (matrix[i][2][0] * matrix[i][1][2]))+ matrix[i][0][2] * ((matrix[i][1][0] * matrix[i][2][1]) - (matrix[i][2][0] * matrix[i][1][1]));
       k++;
       if(i==0)
        continue;
       if(size%i==1)
          j++;
   }
   j=0;
   k=0;
   for(i=0;i<t;i++)

               {
                   if(i!=0)
       {
           if((i%size)==0)
           {
                printf("\n");
                 k=0;
           }
       }
                   printf("  %d",matrix[i][j][k]);
                   k++;
       if(i==0)
        continue;
       if(size%i==1)
          j++;

               }


   matrix[0][0][0] = matrix[0][0][0] * ((matrix[4][1][1] * matrix[8][2][2]) - (matrix[7][2][1] * matrix[5][1][2]))- matrix[1][0][1] * ((matrix[3][1][0] * matrix[8][2][2]) - (matrix[6][2][0] * matrix[5][1][2]))+ matrix[2][0][2] * ((matrix[3][1][0] * matrix[7][2][1]) - (matrix[6][2][0] * matrix[4][1][1]));

   printf("\n\n Final Determinat : %d",matrix[0][0][0]);

    return 0;
}